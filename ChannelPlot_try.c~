#include <iostream>

void ChannelPlot_try()
{
//const int n_points=78;
float avg = 0;
float sum = 0;
int length = 0;
TCanvas *c1= new TCanvas("c1","Title",0,0,600,600);
c1->SetGrid();
int j=0;
TH1F *hist[48]={};

Float_t px1[]= {2,2,2,2,2,2,1,1,1,2,2,2,2,1,2,2,1,1,2,1,1,1,1,1,1,2,2,2,1,1,2,2,1,2,2,2,2,1,2,1,1,1,3,1,2,1,2,2,
2,2,2,2,2,2,1,2,2,2,2,3,2,2,2,2,1,1,2,1,2,1,1,1,2,2,2,2,1,2,2,2,1,2,2,2,2,1,2,2,2,1,3,2,2,1,2,2,
2,2,2,2,2,2,1,2,2,3,2,3,3,2,2,2,2,1,2,2,2,1,1,2,2,2,2,3,1,2,2,2,1,2,2,2,2,1,2,2,2,2,3,2,2,1,2,2,
2,2,2,2,2,2,2,2,2,3,2,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,2,2,2,2,2,3,2,2,2,2,2,2,2,2,3,2,3,2,2,2,
2,2,3,2,2,2,3,3,2,3,0,3,3,3,2,3,2,2,3,3,3,2,3,2,2,2,3,3,2,2,3,2,2,3,3,3,2,2,2,2,2,2,3,2,3,2,3,2,
2,2,3,3,3,2,3,3,2,3,0,3,3,3,3,3,2,3,3,3,3,2,3,2,3,2,3,3,2,2,3,2,2,3,3,3,2,2,2,3,3,3,3,2,3,2,3,3,
2,2,3,3,3,3,3,3,2,3,0,3,0,3,0,3,2,3,3,3,3,2,3,2,3,2,3,3,3,3,3,2,2,3,3,3,2,3,0,3,3,3,3,2,3,2,0,3,
2,2,3,3,3,3,3,0,2,3,0,3,0,3,0,0,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,2,3,3,3,3,2,3,0,3,3,3,0,2,3,2,0,3,
2,2,3,3,3,3,3,0,2,3,0,3,0,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,2,3,0,3,3,3,0,2,3,3,0,3,
2,3,3,3,3,3,0,0,2,3,0,3,0,3,0,0,0,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,0,3,0,3,0,0,3,3,3,0,3,3,0,0,3,
2,3,3,3,3,3,0,0,2,3,0,3,0,3,0,0,0,3,3,3,3,0,3,3,3,3,3,3,3,3,0,3,3,0,3,0,3,0,0,3,3,3,0,3,3,0,0,3,
3,3,3,3,3,3,0,0,3,3,0,3,0,3,0,0,0,3,3,3,3,0,0,3,3,3,3,3,3,3,0,3,3,0,3,0,3,0,0,3,3,3,0,3,3,0,0,3,
3,3,3,0,3,0,0,0,3,3,0,3,0,3,0,0,0,3,3,3,0,0,0,3,4,3,3,3,3,3,0,0,3,0,3,0,3,0,0,3,3,3,0,3,3,0,0,3,
0,0,0,0,3,0,0,0,0,3,0,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,3,3,0,0,0,0,0,0,3,0,3,0,0,3,0,0,0,3,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0};

//length = (sizeof(px1)/sizeof(*px1));

//cout << "The length is " << length <<endl;

//Scaling array by 0.15
for (int i=0; i<length; i++) px1[i] *= 0.15;
//for (int i=0; i<length; i++) sum+=px1[i];
//avg = sum/length;
//cout << "The numerical average is " << std::setprecision(3) << avg << endl;

for(int k=0;k<=47; k++){


std::string h_Title="Channel_";
//Filling Histogram with Array px1[]
std::string h_Name="Histogram for Channel_";
h_Title+= std::to_string(k);
h_Name+= std::to_string(k);
hist[k]=new TH1F(h_Title.c_str(),h_Name.c_str(), 20,0.05,0.75);
//TH1F *hist= new TH1F("histt", "my first macro histogram", 4,0.10,0.65);


//Formatting Plot
hist[k]->SetTitle("Counts per Bin Size");
hist[k]->SetYTitle("Counts");
hist[k]->SetXTitle("Bin Size with two counts");
hist[k]->GetYaxis()->SetTitleOffset(1.25);
hist[k]->GetYaxis()->SetTitleFont(42);
hist[k]->GetYaxis()->CenterTitle();
hist[k]->GetXaxis()->SetTitleFont(42);
hist[k]->GetXaxis()->CenterTitle();
hist[k]->GetXaxis()->SetTitleOffset(1.25);
hist[k]->SetLineColor(4);
hist[k]->SetLineWidth(2);


hist[k]->Draw();



for (int i=0; i<=15; i++ )
{

hist[k]->Fill(px1[i+j]);

} 
j=j+16;
c1->SaveAs("I_file", "RECREATE");
}
}	
